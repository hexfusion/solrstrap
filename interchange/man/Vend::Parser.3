.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.29)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Vend::Parser 3"
.TH Vend::Parser 3 "2016-12-23" "perl v5.22.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Vend::Parser \- Interchange parser class
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\f(CW\*(C`Vend::Parser\*(C'\fR will tokenize a Interchange page when the \f(CW$p\fR\->\fIparse()\fR
method is called. The document to parse can be supplied in arbitrary
chunks. Call \f(CW$p\fR\->\fIeof()\fR the end of the document to flush any remaining
text. The return value from \fIparse()\fR is a reference to the parser object.
.ie n .IP "$self\->start($tag, $attr, $attrseq, $origtext)" 4
.el .IP "\f(CW$self\fR\->start($tag, \f(CW$attr\fR, \f(CW$attrseq\fR, \f(CW$origtext\fR)" 4
.IX Item "$self->start($tag, $attr, $attrseq, $origtext)"
This method is called when a complete start tag has been recognized.
The first argument is the tag name (in lower case) and the second
argument is a reference to a hash that contain all attributes found
within the start tag. The attribute keys are converted to lower case.
Entities found in the attribute values are already expanded. The
third argument is a reference to an array with the lower case
attribute keys in the original order. The fourth argument is the
original Interchange page.
.ie n .IP "$self\->end($tag)" 4
.el .IP "\f(CW$self\fR\->end($tag)" 4
.IX Item "$self->end($tag)"
This method is called when an end tag has been recognized. The
argument is the lower case tag name.
.ie n .IP "$self\->text($text)" 4
.el .IP "\f(CW$self\fR\->text($text)" 4
.IX Item "$self->text($text)"
This method is called when plain text in the document is recognized.
The text is passed on unmodified and might contain multiple lines.
Note that for efficiency reasons entities in the text are \fBnot\fR
expanded.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright 2002\-2007 Interchange Development Group
Copyright 1997\-2002 Red Hat, Inc.  
Original HTML::Parser module copyright 1996 Gisle Aas.
.PP
This library is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.
.SH "AUTHORS"
.IX Header "AUTHORS"
Vend::Parser \- Mike Heins <mike@perusion.com>
HTML::Parser \- Gisle Aas <aas@sn.no>
