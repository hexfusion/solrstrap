.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.29)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Vend::Ship::Postal 3"
.TH Vend::Ship::Postal 3 "2016-12-23" "perl v5.22.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Vend::Ship::Postal \-\- Calculate US Postal service international rates
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& (in catalog.cfg)
\&
\&    Database   usps             ship/usps.txt              TAB
\&    Database   air_pp           ship/air_pp.txt            TAB
\&    Database   surf_pp          ship/surf_pp.txt           TAB
\&
\& (in shipping.asc)
\&
\&    air_pp: US Postal Air Parcel
\&        crit            weight
\&        min             0
\&        max             0
\&        cost            e No shipping needed!
\&        at_least        4
\&        adder           1
\&        aggregate       70
\&        table           air_pp
\&
\&        min             0
\&        max             1000
\&        cost            s Postal
\&
\&        min             70
\&        max             9999999
\&        cost            e Too heavy for Air Parcel
\&
\&    surf_pp:    US Postal Surface Parcel
\&        crit            weight
\&        min             0
\&        max             0
\&        cost            e No shipping needed!
\&        at_least        4
\&        adder           1
\&        aggregate       70
\&        table           surf_pp
\&
\&        min             0
\&        max             1000
\&        cost            s Postal
\&
\&        min             70
\&        max             9999999
\&        cost            e Too heavy for Postal Parcel
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Looks up a service zone by country in the \f(CW\*(C`usps\*(C'\fR table, then looks in
the appropriate rate table for a price by that zone.
.PP
Can aggregate shipments greater than 70 pounds by assuming you will ship
multiple 70\-pound packages (plus one package with the remainder).
