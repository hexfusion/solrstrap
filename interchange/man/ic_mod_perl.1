.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.29)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "IC_MOD_PERL 1"
.TH IC_MOD_PERL 1 "2016-12-23" "perl v5.22.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
ic_mod_perl \-\- Run Interchange entirely inside Apache/mod_perl
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 10
\&  # Add to Apache httpd.conf:
\&  PerlRequire /usr/lib/interchange/bin/ic_mod_perl
\&  PerlChildInitHandler Vend::ModPerl::child_start
\&  PerlChildExitHandler Vend::ModPerl::child_end
\&  <Location /ic>
\&      SetHandler perl\-script
\&      PerlHandler Vend::ModPerl
\&      PerlSendHeader Off
\&      PerlSetupEnv On
\&  </Location>
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
.SS "Benefits"
.IX Subsection "Benefits"
.IP "\(bu" 4
Possibly better stability, especially on non-Linux platforms where
Perl signals are often buggy.
.IP "\(bu" 4
Use less memory total; don't have preforked Apache \fIand\fR Interchange
daemons. Adds about 8 \s-1MB\s0 more to a typical Apache/mod_perl child process,
for a total of, say, 32 \s-1MB\s0 per Apache child process. But standalone
Interchange usually has 3 processes: an Interchange child process (~24
\&\s-1MB\s0), an httpd child (~24 \s-1MB\s0), \fIand\fR a link \s-1CGI \s0(~1 \s-1MB\s0), so it's
actually a decent savings in total memory used.
.IP "\(bu" 4
Speed (ranging from slightly faster to the same on heavy pages,
to 10 hits/sec. faster on empty pages).
.IP "\(bu" 4
Debugging \*(-- delve into bowels with Apache::Status.
.IP "\(bu" 4
Easier coexistence with other mod_perl code and libraries.
.IP "\(bu" 4
Can coexist with standalone Interchange codebase without problems.
.IP "\(bu" 4
Administrative ease (for sysadmins who know Apache but not Interchange).
.SS "Drawbacks"
.IX Subsection "Drawbacks"
.IP "\(bu" 4
Interchange runs as web server user, which in a standard system is usually
apache or www, so you wouldn't want to share that Apache installation
with untrusted user CGIs, \s-1PHP,\s0 etc. as they could read any Interchange
files, including DSNs, userdb, etc.
.IP "\(bu" 4
Apache needs to be dedicated, or very closely watched because all
mod_perl stuff runs in the same interpreter, and lots of mod_perl code
doesn't use Safe.
.IP "\(bu" 4
How do you scale to multiple app servers in this configuration?
.RS 4
.IP "\(bu" 4
Hardware or software port redirector
.IP "\(bu" 4
Tux \s-1CGI\s0 front-end redirector like tlink
.IP "\(bu" 4
Separate lightweight Apache (no modules) that proxies /ic requests
.RE
.RS 4
.RE
.SS "Ideal system setup"
.IX Subsection "Ideal system setup"
Use Tux to serve images & static content, and a dedicated Apache for
Interchange running under the 'interch' user and with no UserDir, \s-1CGI,
PHP,\s0 etc. enabled and an empty DocRoot.
.SH "CAVEATS"
.IX Header "CAVEATS"
.IP "\(bu" 4
Watch out for differing Storable versions in sessions when switching
between standalone and mod_perl runs!
.SH "BUGS"
.IX Header "BUGS"
.IP "\(bu" 4
Haven't yet implemented form/multipart submissions.
.IP "\(bu" 4
Don't yet handle TolerateGet.
.IP "\(bu" 4
Don't yet handle MiniVend 3 style GETs (mv_session_id;mv_arg;mv_pc)
.IP "\(bu" 4
URIs must follow format \f(CW\*(C`/ic/catalogname/page...\*(C'\fR, where /ic is
customizable but must only be one \*(L"directory\*(R" deep (i.e., no
slashes).
.SH "AUTHOR"
.IX Header "AUTHOR"
Jon Jensen <jon@icdevgroup.org>, March 2002
