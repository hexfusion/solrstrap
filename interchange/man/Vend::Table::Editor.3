.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.29)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Vend::Table::Editor 3"
.TH Vend::Table::Editor 3 "2016-12-23" "perl v5.22.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Vend::Table::Editor \-\- Interchange do\-all HTML table editor
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
[table\-editor \s-1OPTIONS\s0]
.PP
[table\-editor \s-1OPTIONS\s0] \s-1TEMPLATE\s0 [/table\-editor]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The [table\-editor] tag produces an \s-1HTML\s0 form that edits a database
table or collects values for a \*(L"wizard\*(R". It is extremely configurable
as to display and characteristics of the widgets used to collect the
input.
.PP
The widget types are based on the Interchange \f(CW\*(C`[display ...]\*(C'\fR UserTag,
which in turn is heavily based on the \s-1ITL\s0 core \f(CW\*(C`[accessories ...]\*(C'\fR tag.
.PP
The \f(CW\*(C`simplest\*(C'\fR form of \f(CW\*(C`[table\-editor]\*(C'\fR is:
.PP
.Vb 1
\&        [table\-editor table=foo]
.Ve
.PP
A page which contains only that tag will edit the table \f(CW\*(C`foo\*(C'\fR, where
\&\f(CW\*(C`foo\*(C'\fR is the name of an Interchange table to edit. If no \f(CW\*(C`foo\*(C'\fR table
is \f(CW\*(C`defined\*(C'\fR, then nothing will be displayed.
.PP
If the \f(CW\*(C`mv_metadata\*(C'\fR entry \*(L"foo\*(R" is present, it is used as the
definition for table display, including the fields to edit and labels
for sections of the form. If \f(CW\*(C`ui_data_fields\*(C'\fR is defined, this
cancels fetch of the view and any breaks and labels must be
defined with \f(CW\*(C`ui_break_before\*(C'\fR and \f(CW\*(C`ui_break_before_label\*(C'\fR. More
on the view concept later.
.PP
A simple \*(L"wizard\*(R" can be made with:
.PP
.Vb 6
\&        [table\-editor
\&                        wizard=1
\&                        ui_wizard_fields="foo bar"
\&                        mv_nextpage=wizard2
\&                        mv_prevpage=wizard_intro
\&                        ]
.Ve
.PP
The purpose of a \*(L"wizard\*(R" is to collect values from the user and
place them in the \f(CW$Values\fR array. A next page value (option mv_nextpage)
must be defined to give a destination; if mv_prevpage is defined then
a \*(L"Back\*(R" button is presented to allow paging backward in the wizard.
