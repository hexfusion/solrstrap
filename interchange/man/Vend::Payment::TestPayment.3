.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.29)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Vend::Payment::TestPayment 3"
.TH Vend::Payment::TestPayment 3 "2016-12-23" "perl v5.22.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Vend::Payment::TestPayment \- Interchange payment test module
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    &charge=testpayment
\& 
\&        or
\& 
\&    [charge mode=testpayment param1=value1 param2=value2]
.Ve
.SH "PREREQUISITES"
.IX Header "PREREQUISITES"
None.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The Vend::Payment::TestPayment module implements the \fItestpayment()\fR routine
for use with Interchange.  It's compatible on a call level with the other
Interchange payment modules \*(-- in theory (and even usually in practice) you
could switch from TestPayment to another payment module with a few
configuration file changes.
.PP
The module will perform one of three actions:
.IP "\(bu" 4
If the card number is 4111111111111111 then the transaction will be approved. 
Additional approval numbers include 6011333333333333 (discover), 5454545454545454
(mc), 341111111111111 (amex).
.IP "\(bu" 4
If the card number is 4111111111111129 then the transaction will be declined.
.IP "\(bu" 4
Any other card number will raise an error and the transaction will be declined.
.PP
To enable this module, place this directive in \f(CW\*(C`interchange.cfg\*(C'\fR:
.PP
.Vb 1
\&    Require module Vend::Payment::TestPayment
.Ve
.PP
This \fImust\fR be in interchange.cfg or a file included from it.
.PP
Make sure CreditCardAuto is off (default in Interchange demos).
.PP
The mode can be named anything, but the \f(CW\*(C`gateway\*(C'\fR parameter must be set
to \f(CW\*(C`testpayment\*(C'\fR.  To make it the default payment gateway for all credit
card transactions in a specific catalog, you can set in \f(CW\*(C`catalog.cfg\*(C'\fR:
.PP
.Vb 1
\&    Variable   MV_PAYMENT_MODE  testpayment
.Ve
.PP
It uses several of the standard settings from Interchange payment.  Any time
we speak of a setting, it is obtained either first from the tag/call options,
then from an Interchange order Route named for the mode, then finally a
default global payment variable, For example, the \f(CW\*(C`id\*(C'\fR parameter would
be specified by:
.PP
.Vb 1
\&    [charge mode=testpayment id=testid]
.Ve
.PP
or
.PP
.Vb 1
\&    Route testpayment id testid
.Ve
.PP
or
.PP
.Vb 1
\&    Variable MV_PAYMENT_ID      testid
.Ve
.PP
The active settings are:
.IP "id" 4
.IX Item "id"
A test account \s-1ID,\s0 which can be any value you like.
Global parameter is \s-1MV_PAYMENT_ID.\s0
.IP "secret" 4
.IX Item "secret"
A test account password, which can be any value you like.
Global parameter is \s-1MV_PAYMENT_SECRET. \s0 This is not needed for test
charges, using this module, but you may as well set it up anyway.
.IP "transaction" 4
.IX Item "transaction"
The type of transaction to be run.  Valid values are:
.Sp
.Vb 6
\&    auth
\&    return
\&    reverse
\&    sale
\&    settle
\&    void
.Ve
.Sp
Actually, the transaction type is ignored in this version, but you may as
well set it anyway.
.IP "remap" 4
.IX Item "remap"
This remaps the form variable names to the ones needed by TestPayment.  See
the \f(CW\*(C`Payment Settings\*(C'\fR heading in the Interchange documentation for use.
.SS "Troubleshooting"
.IX Subsection "Troubleshooting"
.IP "\(bu" 4
Make sure you \*(L"Require\*(R"d the module in interchange.cfg:
.Sp
.Vb 1
\&    Require module Vend::Payment::TestPayment
.Ve
.IP "\(bu" 4
Check the error logs, both catalog and global.
.IP "\(bu" 4
Make sure you set your payment parameters properly.
.IP "\(bu" 4
Try an order, then put this code in a page:
.Sp
.Vb 8
\&    <XMP>
\&    [calc]
\&        my $string = $Tag\->uneval( { ref => $Session\->{payment_result} });
\&        $string =~ s/{/{\en/;
\&        $string =~ s/,/,\en/g;
\&        return $string;
\&    [/calc]
\&    </XMP>
.Ve
.Sp
That should show what happened.
.IP "\(bu" 4
If all else fails, Cursor Software and other consultants are available to help
with integration for a fee.
.SH "BUGS"
.IX Header "BUGS"
There is actually nothing *in* Vend::Payment::TestPayment.  It changes packages
to Vend::Payment and places things there.
.SH "AUTHORS"
.IX Header "AUTHORS"
Kevin Walsh <kevin@cursor.biz>
Based on original code by Mike Heins <mheins@perusion.com>
